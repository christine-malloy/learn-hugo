name: Deploy Hugo Site to AWS S3

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - prod

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      TF_VAR_aws_region: ${{ secrets.AWS_REGION }}
      ENVIRONMENT: ${{ github.event.inputs.environment || 'dev' }}
      TF_WORKING_DIR: ./infra/terraform-aws-hugo-site
      TERRAFORM_VERSION: '1.5.7'
      AWS_REGION: 'us-east-1'
      S3_BUCKET: 'greenmonkey-hugotest'
      CLOUDFRONT_DISTRIBUTION_ID: ''
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: true
          fetch-depth: 0

      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v3
        with:
          hugo-version: '0.145.0'
          extended: true

      - name: Build
        run: make build-${{ env.ENVIRONMENT }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION || '1.5.7' }}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION || 'us-east-1' }}

      - name: Terraform Init
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: |
          terraform init \
            -backend-config="bucket=${{ secrets.TF_STATE_BUCKET }}" \
            -backend-config="key=terraform.tfstate" \
            -backend-config="region=${{ env.AWS_REGION || 'us-east-1' }}"

      - name: Terraform Workspace
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: |
          WORKSPACE=$(basename $(pwd))
          if ! terraform workspace list | grep -q "$WORKSPACE"; then
            echo "Creating new workspace: $WORKSPACE"
            terraform workspace new $WORKSPACE
          else
            echo "Selecting existing workspace: $WORKSPACE"
            terraform workspace select $WORKSPACE
          fi

      - name: Terraform Apply
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: |
          terraform apply \
            -var-file="env/${{ env.ENVIRONMENT }}/terraform.tfvars" \
            -auto-approve

      - name: Deploy to S3
        run: |
          make deploy-${{ env.ENVIRONMENT }}

      - name: Get CloudFront Distribution ID
        id: cloudfront
        if: env.ENVIRONMENT == 'prod'
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: |
          if terraform output -raw cloudfront_id 2>/dev/null; then
            CF_ID=$(terraform output -raw cloudfront_id)
            echo "CLOUDFRONT_DISTRIBUTION_ID=${CF_ID}" >> $GITHUB_ENV
          fi

      - name: Invalidate CloudFront (if configured)
        if: env.CLOUDFRONT_DISTRIBUTION_ID != ''
        run: |
          aws cloudfront create-invalidation --distribution-id ${{ env.CLOUDFRONT_DISTRIBUTION_ID }} --paths "/*" 